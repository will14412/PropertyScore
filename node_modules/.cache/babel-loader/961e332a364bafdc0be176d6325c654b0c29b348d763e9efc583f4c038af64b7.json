{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willc\\\\CODING PROJECTS\\\\ReactProjects\\\\property scoring 2\\\\src\\\\components\\\\StatusPanel.js\";\nimport React from 'react';\n\n/**\n * StatusPanel renders a vertical list of API calls with their current status.\n * Each entry is colour‑coded to communicate progress at a glance. Place this\n * component somewhere visible (e.g. in a sidebar) so users can see which\n * calls have completed or failed in real time and after the fact.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusPanel({\n  statuses\n}) {\n  const entries = Object.entries(statuses || {});\n  if (entries.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow p-4 border border-gray-100 w-full lg:w-64\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-blue-700 mb-2\",\n      children: \"API status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-1\",\n      children: entries.map(([name, status]) => {\n        let colour = 'text-yellow-600';\n        if (status === 'success') colour = 'text-green-600';\n        if (status === 'error') colour = 'text-red-600';\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex justify-between text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-gray-700\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${colour} font-semibold capitalize`,\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = StatusPanel;\nexport default StatusPanel;\nvar _c;\n$RefreshReg$(_c, \"StatusPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StatusPanel","statuses","entries","Object","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","status","colour","_c","$RefreshReg$"],"sources":["C:/Users/willc/CODING PROJECTS/ReactProjects/property scoring 2/src/components/StatusPanel.js"],"sourcesContent":["import React from 'react';\n\n/**\n * StatusPanel renders a vertical list of API calls with their current status.\n * Each entry is colour‑coded to communicate progress at a glance. Place this\n * component somewhere visible (e.g. in a sidebar) so users can see which\n * calls have completed or failed in real time and after the fact.\n */\nfunction StatusPanel({ statuses }) {\n  const entries = Object.entries(statuses || {});\n  if (entries.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"bg-white rounded-xl shadow p-4 border border-gray-100 w-full lg:w-64\">\n      <h3 className=\"text-lg font-semibold text-blue-700 mb-2\">API status</h3>\n      <ul className=\"space-y-1\">\n        {entries.map(([name, status]) => {\n          let colour = 'text-yellow-600';\n          if (status === 'success') colour = 'text-green-600';\n          if (status === 'error') colour = 'text-red-600';\n          return (\n            <li key={name} className=\"flex justify-between text-sm\">\n              <span className=\"font-medium text-gray-700\">{name}</span>\n              <span className={`${colour} font-semibold capitalize`}>{status}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default StatusPanel;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACjC,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACD,QAAQ,IAAI,CAAC,CAAC,CAAC;EAC9C,IAAIC,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,oBACEL,OAAA;IAAKM,SAAS,EAAC,sEAAsE;IAAAC,QAAA,gBACnFP,OAAA;MAAIM,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxEX,OAAA;MAAIM,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBJ,OAAO,CAACS,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,MAAM,CAAC,KAAK;QAC/B,IAAIC,MAAM,GAAG,iBAAiB;QAC9B,IAAID,MAAM,KAAK,SAAS,EAAEC,MAAM,GAAG,gBAAgB;QACnD,IAAID,MAAM,KAAK,OAAO,EAAEC,MAAM,GAAG,cAAc;QAC/C,oBACEf,OAAA;UAAeM,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBACrDP,OAAA;YAAMM,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAEM;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzDX,OAAA;YAAMM,SAAS,EAAE,GAAGS,MAAM,2BAA4B;YAAAR,QAAA,EAAEO;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAF/DE,IAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGT,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACK,EAAA,GAvBQf,WAAW;AAyBpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}